version: "3.8"

services:
  nginx:
    container_name: ${PROJECT_NAME}_nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "${HOST_PORT_NGINX}:80"
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

  frontend:
    container_name: ${PROJECT_NAME}_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    working_dir: /app
    environment:
      # use o proxy do Nginx (cliente acessa /api no host)
      - VITE_API_BASE_URL=/api
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0 --port 5173"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    expose:
      - "5173"
    networks:
      - app-network

  backend:
    container_name: ${PROJECT_NAME}_backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    working_dir: /app
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_HOST=${POSTGRES_HOST}
      - DATABASE_PORT=${POSTGRES_PORT}
      - DATABASE_USER=${POSTGRES_USER}
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_NAME=${POSTGRES_DB}
    command: >
      sh -c "npm install &&
             npm run start:dev"
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    expose:
      - "3000"
    depends_on:
      - database
    networks:
      - app-network

  database:
    container_name: ${PROJECT_NAME}_database
    image: postgres:alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # (opcional expor para o host)
    # ports:
    #   - "${POSTGRES_PORT}:5432"
    networks:
      - app-network

  pgadmin:
    container_name: ${PROJECT_NAME}_pgadmin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_LISTEN_PORT=80
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "${HOST_PORT_PGADMIN}:80"
    depends_on:
      - database
    networks:
      - app-network

volumes:
  postgres_data:
  pgadmin_data:
  frontend_node_modules:
  backend_node_modules:

networks:
  app-network:
    driver: bridge
